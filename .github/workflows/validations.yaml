name: "Validations"
on:
  merge_group:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  Static-Analysis:
    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline
    name: "Static analysis"
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          persist-credentials: false

      - name: Bootstrap environment
        uses: anchore/go-make/.github/actions/bootstrap@latest

      - name: Run static analysis
        run: make static-analysis

  Unit-Test:
    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline
    name: "Unit tests"
    needs: All-Unit-Tests
    runs-on: ubuntu-latest
    steps:
      - run: echo All Unit Tests passed

  All-Unit-Tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-22.04
          - windows-2022
          - macos-14
    permissions:
      contents: read
    steps:
      - name: Bootstrap environment
        uses: anchore/go-make/.github/actions/bootstrap@latest

      - name: Run unit tests
        run: make unit

  Build-Snapshot-Artifacts:
    name: "Build snapshot artifacts"
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Bootstrap environment
        uses: anchore/go-make/.github/actions/bootstrap@latest
        with:
          # why have another build cache key? We don't want unit/integration/etc test build caches to replace
          # the snapshot build cache, which includes builds for all OSs and architectures. As long as this key is
          # unique from the build-cache-key-prefix in other CI jobs, we should be fine.
          #
          # note: ideally this value should match what is used in release (just to help with build times).
          cache-key-prefix: "snapshot"

      - name: Build snapshot artifacts
        run: make snapshot
